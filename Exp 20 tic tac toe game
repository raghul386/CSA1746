def print_board(board):
    for row in board:
        print(" | ".join(row))
    print()

def check_win(board, player):
    # Rows, columns, diagonals
    return any(all(cell==player for cell in row) for row in board) or \
           any(all(board[r][c]==player for r in range(3)) for c in range(3)) or \
           all(board[i][i]==player for i in range(3)) or \
           all(board[i][2-i]==player for i in range(3))

board = [[" "]*3 for _ in range(3)]
players = ["X","O"]
turn = 0

for _ in range(9):
    print_board(board)
    row = int(input(f"Player {players[turn]} enter row (0-2): "))
    col = int(input(f"Player {players[turn]} enter col (0-2): "))
    if board[row][col] == " ":
        board[row][col] = players[turn]
        if check_win(board, players[turn]):
            print_board(board)
            print(f"Player {players[turn]} wins!")
            break
        turn = 1 - turn
    else:
        print("Cell already occupied!")
else:
    print_board(board)
    print("It's a draw!")
